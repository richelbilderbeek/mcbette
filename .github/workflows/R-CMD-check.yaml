on:
  push:
  pull_request:
  schedule:
  - cron: "0 0 13 * *"

name: R-CMD-check

jobs:
  R-CMD-check:
    strategy:
      fail-fast: false
      matrix:
        install_beast2: [true, false]

    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install libharfbuzz-dev libfribidi-dev
        run: sudo apt install -qq libharfbuzz-dev libfribidi-dev

      - name: Install libmpfr-dev for Rmpfr
        run: sudo apt install -qq libmpfr-dev

      - name: Install libcurl4-openssl-dev
        run: sudo apt install -qq libcurl4-openssl-dev

      - name: Fix rJava error # from https://travis-ci.community/t/cannot-connect-to-java-from-r/9754/8
        run: sudo $(which R) CMD javareconf

      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          remotes::install_cran("covr")
          remotes::install_cran("lintr")
          remotes::install_github("ropensci/beautier", ref = "develop")
          remotes::install_github("ropensci/tracerer", ref = "develop")
          remotes::install_github("ropensci/beastier", ref = "develop")
          remotes::install_github("ropensci/mauricer", ref = "develop")
          remotes::install_github("ropensci/babette", ref = "develop")
          remotes::install_github("richelbilderbeek/beastierinstall")
          remotes::install_github("richelbilderbeek/mauricerinstall")
          remotes::install_github("MangoTheCat/goodpractice")
        shell: Rscript {0}

      - name: Install BEAST2
        env:
          INSTALL_BEAST2: ${{ matrix.install_beast2 }}
        run: if [[ "$INSTALL_BEAST2" == true ]]; then Rscript -e "beastierinstall::install_beast2()"; fi

      - name: Install BEAST2 NS package
        env:
          INSTALL_BEAST2: ${{ matrix.install_beast2 }}
        run: if [[ "$INSTALL_BEAST2" == true ]]; then Rscript -e 'mauricerinstall::install_beast2_pkg("NS")'; fi

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

      #- name: Make sure that no files are created in the .cache folder
      #  run: beastier::check_empty_beaustier_folders()
      #  shell: Rscript {0}

      - name: Test coverage
        env:
          INSTALL_BEAST2: ${{ matrix.install_beast2 }}
        run: if [[ "$INSTALL_BEAST2" == true ]]; then Rscript -e 'covr::codecov()'; fi

      - name: Lint
        env:
          INSTALL_BEAST2: ${{ matrix.install_beast2 }}
        run: if [[ "$INSTALL_BEAST2" == false ]]; then Rscript -e 'lintr::lint_package()'; fi

      - name: Report
        run: beastier::beastier_report()
        shell: Rscript {0}

